flag = [' ']*0x33

unk_4040A0  0x4040a0
 xor 0xba tiap char sejauh 0x11

unk_404100  0x404100
 xor 0xbe sejauh 0x22

unk_4041A0
 xor 0xbc sejauh 0x11


input di pisah jadi 3 [0,3,6,9,...][1,4,7,...][2,5,8,...]

part1 
(input ^ 0xbe) + counter
0x4040a0:	0x00000030	0x0000002a	0x00000035	0x00000046
0x4040b0:	0x0000006e	0x0000005c	0x00000059	0x0000002c
0x4040c0:	0x0000002f	0x00000050	0x0000004e	0x00000056
0x4040d0:	0x00000062	0x00000020	0x00000044	0x00000020
0x4040e0:	0x0000005a

key1 = [i ^ 0xba for i in [0x30,0x2a,0x35,0x46,0x6e,0x5c,0x59,0x2c,0x2f,0x50,0x4e,0x56,0x62,0x20,0x44,0x20,0x5a]]
for i in range(0x11):
 for j in range(0x100):
  if (j^0xbe)+i == key1[i]:
   flag[i*3] = chr(j)
   break

print ''.join(flag)


part2
(input & 0xf)*0xca; ((input & 0xf0)>>4)*0xfe
0x404100:	0x00000bb2	0x00000346	0x00000b68	0x00000448
0x404110:	0x0000012a	0x00000346	0x00000402	0x00000244
0x404120:	0x00000538	0x0000054a	0x00000396	0x0000064c
0x404130:	0x000006ee	0x0000054a	0x00000074	0x0000064c
0x404140:	0x000002e0	0x00000448	0x00000538	0x0000064c
0x404150:	0x000006ee	0x0000054a	0x000000be	0x00000448
0x404160:	0x00000396	0x00000244	0x00000b68	0x00000448
0x404170:	0x00000396	0x0000054a	0x00000074	0x00000244
0x404180:	0x00000396	0x00000244

key2 = [i ^ 0xbe for i in [0xbb2,0x346,0xb68,0x448,0x12a,0x346,0x402,0x244,0x538,0x54a,0x396,0x64c,0x6ee,0x54a,0x074,0x64c,0x2e0,0x448,0x538,0x64c,0x6ee,0x54a,0x0be,0x448,0x396,0x244,0xb68,0x448,0x396,0x54a,0x074,0x244,0x396,0x244]]

for i in range(0,len(key2),2):
 for j in range(0x100):
  if ((j & 0xf)*0xca == key2[i]) and (((j & 0xf0)>>4)*0xfe ==key2[i+1]):
   flag[(i/2)*3+1] = chr(j)
   break

part3
0x4041a0:	0x00000020	0x00000018	0x00000025	0x00000031
0x4041b0:	0x0000003f	0x000000d5	0x000000ce	0x000000c5
0x4041c0:	0x0000003f	0x000000e9	0x0000003f	0x000000c4
0x4041d0:	0x000000db	0x00000039	0x0000003f	0x000000e6
0x4041e0:	0x00000028

key3 = [i ^ 0xbc for i in [0x20,0x18,0x25,0x31,0x3f,0xd5,0xce,0xc5,0x3f,0xe9,0x3f,0xc4,0xdb,0x39,0x3f,0xe6,0x28]]
tmp = key3
for i in range(0x3e8):
    for j in range(0,0x11,2):
        a = tmp[j]+2
        b = tmp[(j+1) % 0x11] + 1
        tmp[j]=b
        tmp[(j+1)%0x11]=a

tmp = [int(hex(i)[-2:],16) for i in tmp]
for i in range(0x11):
 flag[i*3+2]=chr(tmp[i])

''.join(flag)

tmp=input[i]
tmp2 = input[i+1 % 17]
input[i]=tmp2-1
tmp = tmp-2
input[i+1 %17]= tmp




Final solution :
l0l in ~/CTF/Soal/Writeup/ctf-writeup/ASGamaCTF/Reverse Engineering/debug me on master ● ● λ ./debug 4Nd1_l3BuG6ing__tEchN1qU3S__w1Th__PTr4C3_aNd_516n4t
Sorry, that didn't work. Please try again.
l0l in ~/CTF/Soal/Writeup/ctf-writeup/ASGamaCTF/Reverse Engineering/debug me on master ● ● λ ./debug 4Nt1_d3BuG6ing__tEchN1qU3S__w1Th__PTr4C3_aNd_516n4l
Correct!
Flag ==> GamaCTF{4Nt1_d3BuG6ing__tEchN1qU3S__w1Th__PTr4C3_aNd_516n4l}


flag = [' ']*0x33

key1 = [i ^ 0xba for i in [0x30,0x2a,0x35,0x46,0x6e,0x5c,0x59,0x2c,0x2f,0x50,0x4e,0x56,0x62,0x20,0x44,0x20,0x5a]]
for i in range(0x11):
 for j in range(0x100):
  if (j^0xbe)+i == key1[i]:
   flag[i*3] = chr(j)
   break

key2 = [i ^ 0xbe for i in [0xbb2,0x346,0xb68,0x448,0x12a,0x346,0x402,0x244,0x538,0x54a,0x396,0x64c,0x6ee,0x54a,0x074,0x64c,0x2e0,0x448,0x538,0x64c,0x6ee,0x54a,0x0be,0x448,0x396,0x244,0xb68,0x448,0x396,0x54a,0x074,0x244,0x396,0x244]]

for i in range(0,len(key2),2):
 for j in range(0x100):
  if ((j & 0xf)*0xca == key2[i]) and (((j & 0xf0)>>4)*0xfe ==key2[i+1]):
   flag[(i/2)*3+1] = chr(j)
   break


key3 = [i ^ 0xbc for i in [0x20,0x18,0x25,0x31,0x3f,0xd5,0xce,0xc5,0x3f,0xe9,0x3f,0xc4,0xdb,0x39,0x3f,0xe6,0x28]]
tmp = key3
for i in range(0x3e8):
    for j in range(0,0x11,2):
        a = tmp[j]+2
        b = tmp[(j+1)%0x11]+1
        tmp[j]=b
        tmp[(j+1)%0x11]=a


tmp = [int(hex(i)[-2:],16) for i in tmp]
for i in range(0x11):
 flag[i*3+2]=chr(tmp[i])


''.join(flag)

